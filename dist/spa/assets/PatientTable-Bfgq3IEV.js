import{h as p,u as D,e as v,d as g}from"./QBtn-CGi78GET.js";import{k as h,c as f,h as u,g as V,v as T,Y as S,L as I,S as H,f as l,N as d,X as O,H as q}from"./index-B--a_9vc.js";import{k as F,l as C,h as U,m as k,i as s}from"./QTable-ComeHYaz.js";import{Q as N}from"./QToggle-C9hb0KIY.js";import{a as M,d as B,_ as Q}from"./_plugin-vue_export-helper-GbxhcRUu.js";import{g as E,a as A,b as R,c,u as b,d as y,e as x}from"./index.esm-DCn6hZRc.js";const L=h({name:"QTd",props:{props:Object,autoWidth:Boolean,noHover:Boolean},setup(e,{slots:t}){const o=V(),n=f(()=>"q-td"+(e.autoWidth===!0?" q-table--col-auto-width":"")+(e.noHover===!0?" q-td--no-hover":"")+" ");return()=>{if(e.props===void 0)return u("td",{class:n.value},p(t.default));const i=o.vnode.key,r=(e.props.colsMap!==void 0?e.props.colsMap[i]:null)||e.props.col;if(r===void 0)return;const{row:a}=e.props;return u("td",{class:n.value+r.__tdClass(a),style:r.__tdStyle(a)},p(t.default))}}}),w=h({name:"QCardSection",props:{tag:{type:String,default:"div"},horizontal:Boolean},setup(e,{slots:t}){const o=f(()=>`q-card__section q-card__section--${e.horizontal===!0?"horiz row no-wrap":"vert"}`);return()=>u(e.tag,{class:o.value},p(t.default))}}),z=h({name:"QCardActions",props:{...D,vertical:Boolean},setup(e,{slots:t}){const o=v(e),n=f(()=>`q-card__actions ${o.value} q-card__actions--${e.vertical===!0?"vert column":"horiz row"}`);return()=>u("div",{class:n.value},p(t.default))}}),K=h({name:"QCard",props:{...M,tag:{type:String,default:"div"},square:Boolean,flat:Boolean,bordered:Boolean},setup(e,{slots:t}){const{proxy:{$q:o}}=V(),n=B(e,o),i=f(()=>"q-card"+(n.value===!0?" q-card--dark q-dark":"")+(e.bordered===!0?" q-card--bordered":"")+(e.square===!0?" q-card--square no-border-radius":"")+(e.flat===!0?" q-card--flat no-shadow":""));return()=>u(e.tag,{class:i.value},p(t.default))}});function P(e){if(e===!1)return 0;if(e===!0||e===void 0)return 1;const t=parseInt(e,10);return isNaN(t)?0:t}const Y=T({name:"close-popup",beforeMount(e,{value:t}){const o={depth:P(t),handler(n){o.depth!==0&&setTimeout(()=>{const i=F(e);i!==void 0&&C(i,n,o.depth)})},handlerKey(n){S(n,13)===!0&&o.handler(n)}};e.__qclosepopup=o,e.addEventListener("click",o.handler),e.addEventListener("keyup",o.handlerKey)},updated(e,{value:t,oldValue:o}){t!==o&&(e.__qclosepopup.depth=P(t))},beforeUnmount(e){const t=e.__qclosepopup;e.removeEventListener("click",t.handler),e.removeEventListener("keyup",t.handlerKey),delete e.__qclosepopup}}),m=E(A()),j={data(){return{name:"",dob:"",age:"",maritalStatus:null,children:0,doa:"",dod:"",hospital:"",surgery:"",preDiagnosis:"",postDiagnosis:"",histology:"",comorbidities:"",preOpHb:null,postOpHb:null,surgeryTime:"",complications:"",specialNotes:"",readmission:!1,photo:null,otherMatters:"",formId:null,patients:[],columns:[{name:"name",label:"Name",field:"name",style:"max-width: 150px; height: auto; white-space: normal; text-align: left;"},{name:"dob",label:"Date of Birth",field:"dob",style:"max-width: 150px; white-space: normal; text-align: left;"},{name:"age",label:"Age",field:"age",style:"max-width: 100px; white-space: normal; text-align: left;"},{name:"maritalStatus",label:"Marital Status",field:"maritalStatus",style:"max-width: 150px; white-space: normal; text-align: left;"},{name:"children",label:"Children",field:"children",style:"max-width: 100px; white-space: normal; text-align: left;"},{name:"doa",label:"Date of Admission",field:"doa",style:"max-width: 150px; white-space: normal; text-align: left;"},{name:"dod",label:"Date of Discharge",field:"dod",style:"max-width: 150px; white-space: normal; text-align: left;"},{name:"hospital",label:"Hospital",field:"hospital",style:"max-width: 150px; white-space: normal; text-align: left;"},{name:"surgery",label:"Surgery",field:"surgery",style:"max-width: 150px; white-space: normal; text-align: left;"},{name:"preDiagnosis",label:"Pre-Surgery Diagnosis",field:"preDiagnosis",style:"max-width: 200px; height: auto; white-space: normal; text-align: left;"},{name:"postDiagnosis",label:"Post-Surgery Diagnosis",field:"postDiagnosis",style:"max-width: 200px; white-space: normal; text-align: left;"},{name:"histology",label:"Histology",field:"histology",style:"max-width: 150px; height: auto; white-space: normal; text-align: left;"},{name:"comorbidities",label:"Comorbidities",field:"comorbidities",style:"max-width: 200px; white-space: normal; text-align: left;"},{name:"preOpHb",label:"Pre-op HB",field:"preOpHb",style:"max-width: 100px; white-space: normal; text-align: left;"},{name:"postOpHb",label:"Post-op HB",field:"postOpHb",style:"max-width: 100px; white-space: normal; text-align: left;"},{name:"surgeryTime",label:"Surgery Time",field:"surgeryTime",style:"max-width: 150px; white-space: normal; text-align: left;"},{name:"complications",label:"Post-op Complications",field:"complications",style:"max-width: 200px; white-space: normal; text-align: left;"},{name:"specialNotes",label:"Special Notes",field:"specialNotes",style:"max-width: 200px; white-space: normal; text-align: left;"},{name:"readmission",label:"Readmission Required",field:"readmission",style:"max-width: 150px; white-space: normal; text-align: left;"},{name:"otherMatters",label:"Other Matters",field:"otherMatters",style:"max-width: 200px; white-space: normal; text-align: left;"},{name:"actions",label:"Actions",field:"actions",style:"text-align: left;"}],isDialogOpen:!1,editedPatient:{}}},methods:{onReset(){Object.keys(this.$data).forEach(e=>{this[e]=this.$options.data()[e]})},async saveToFirebase(e){try{if(this.formId)await b(y(m,"patients",this.formId),e),console.log("Document updated:",this.formId,e);else{const t=await R(c(m,"patients"),e);this.formId=t.id,console.log("New document created with ID:",this.formId)}}catch(t){console.error("Error saving to Firebase:",t)}},async onSubmit(){const e={name:this.name,dob:this.dob,age:this.age,maritalStatus:this.maritalStatus,children:this.children,doa:this.doa,dod:this.dod,hospital:this.hospital,surgery:this.surgery,preDiagnosis:this.preDiagnosis,postDiagnosis:this.postDiagnosis,histology:this.histology,comorbidities:this.comorbidities,preOpHb:this.preOpHb,postOpHb:this.postOpHb,surgeryTime:this.surgeryTime,complications:this.complications,specialNotes:this.specialNotes,readmission:this.readmission,otherMatters:this.otherMatters,updatedAt:new Date().toISOString()};await this.saveToFirebase(e)},async fetchPatients(){(await x(c(m,"patients"))).forEach(t=>{this.patients.push({id:t.id,...t.data()})})},editRow(e){this.editedPatient={...e},this.isDialogOpen=!0},async saveEdit(){try{await b(y(m,"patients",this.editedPatient.id),this.editedPatient);const e=this.patients.findIndex(t=>t.id===this.editedPatient.id);e!==-1&&this.patients.splice(e,1,this.editedPatient),this.isDialogOpen=!1}catch(e){console.error("Error updating document:",e)}}},watch:{dob(e){if(e){const t=new Date(e),o=new Date;let n=o.getFullYear()-t.getFullYear();const i=o.getMonth()-t.getMonth();(i<0||i===0&&o.getDate()<t.getDate())&&n--,this.age=n}this.formId&&this.saveToFirebase({dob:e,age:this.age})},name(e){this.formId&&this.saveToFirebase({name:e})},maritalStatus(e){this.formId&&this.saveToFirebase({maritalStatus:e})},children(e){this.formId&&this.saveToFirebase({children:e})},doa(e){this.formId&&this.saveToFirebase({doa:e})},dod(e){this.formId&&this.saveToFirebase({dod:e})},hospital(e){this.formId&&this.saveToFirebase({hospital:e})},surgery(e){this.formId&&this.saveToFirebase({surgery:e})},preDiagnosis(e){this.formId&&this.saveToFirebase({preDiagnosis:e})},postDiagnosis(e){this.formId&&this.saveToFirebase({postDiagnosis:e})},histology(e){this.formId&&this.saveToFirebase({histology:e})},comorbidities(e){this.formId&&this.saveToFirebase({comorbidities:e})},preOpHb(e){this.formId&&this.saveToFirebase({preOpHb:e})},postOpHb(e){this.formId&&this.saveToFirebase({postOpHb:e})},surgeryTime(e){this.formId&&this.saveToFirebase({surgeryTime:e})},complications(e){this.formId&&this.saveToFirebase({complications:e})},specialNotes(e){this.formId&&this.saveToFirebase({specialNotes:e})},readmission(e){this.formId&&this.saveToFirebase({readmission:e})},otherMatters(e){this.formId&&this.saveToFirebase({otherMatters:e})}},async mounted(){(await x(c(m,"patients"))).forEach(t=>{this.patients.push({id:t.id,...t.data()})})}};function W(e,t,o,n,i,r){return I(),H("div",null,[l(U,{class:"word-wrap-table",style:{width:"auto"},rows:i.patients,columns:i.columns,"row-key":"id"},{"body-cell-actions":d(a=>[l(L,{props:a},{default:d(()=>[l(g,{flat:"",icon:"edit_note",onClick:X=>r.editRow(a.row)},null,8,["onClick"])]),_:2},1032,["props"])]),_:1},8,["rows","columns"]),l(k,{modelValue:i.isDialogOpen,"onUpdate:modelValue":t[20]||(t[20]=a=>i.isDialogOpen=a)},{default:d(()=>[l(K,null,{default:d(()=>[l(w,null,{default:d(()=>t[21]||(t[21]=[O("div",{class:"text-h6"},"Edit Patient",-1)])),_:1}),l(w,null,{default:d(()=>[l(s,{modelValue:i.editedPatient.name,"onUpdate:modelValue":t[0]||(t[0]=a=>i.editedPatient.name=a),label:"Name"},null,8,["modelValue"]),l(s,{modelValue:i.editedPatient.dob,"onUpdate:modelValue":t[1]||(t[1]=a=>i.editedPatient.dob=a),label:"Date of Birth",type:"date"},null,8,["modelValue"]),l(s,{modelValue:i.editedPatient.age,"onUpdate:modelValue":t[2]||(t[2]=a=>i.editedPatient.age=a),label:"Age",type:"number"},null,8,["modelValue"]),l(s,{modelValue:i.editedPatient.maritalStatus,"onUpdate:modelValue":t[3]||(t[3]=a=>i.editedPatient.maritalStatus=a),label:"Marital Status"},null,8,["modelValue"]),l(s,{modelValue:i.editedPatient.children,"onUpdate:modelValue":t[4]||(t[4]=a=>i.editedPatient.children=a),label:"Children",type:"number"},null,8,["modelValue"]),l(s,{modelValue:i.editedPatient.doa,"onUpdate:modelValue":t[5]||(t[5]=a=>i.editedPatient.doa=a),label:"Date of Admission",type:"date"},null,8,["modelValue"]),l(s,{modelValue:i.editedPatient.dod,"onUpdate:modelValue":t[6]||(t[6]=a=>i.editedPatient.dod=a),label:"Date of Discharge",type:"date"},null,8,["modelValue"]),l(s,{modelValue:i.editedPatient.hospital,"onUpdate:modelValue":t[7]||(t[7]=a=>i.editedPatient.hospital=a),label:"Hospital"},null,8,["modelValue"]),l(s,{modelValue:i.editedPatient.surgery,"onUpdate:modelValue":t[8]||(t[8]=a=>i.editedPatient.surgery=a),label:"Surgery"},null,8,["modelValue"]),l(s,{modelValue:i.editedPatient.preDiagnosis,"onUpdate:modelValue":t[9]||(t[9]=a=>i.editedPatient.preDiagnosis=a),label:"Pre-Surgery Diagnosis"},null,8,["modelValue"]),l(s,{modelValue:i.editedPatient.postDiagnosis,"onUpdate:modelValue":t[10]||(t[10]=a=>i.editedPatient.postDiagnosis=a),label:"Post-Surgery Diagnosis"},null,8,["modelValue"]),l(s,{modelValue:i.editedPatient.histology,"onUpdate:modelValue":t[11]||(t[11]=a=>i.editedPatient.histology=a),label:"Histology"},null,8,["modelValue"]),l(s,{modelValue:i.editedPatient.comorbidities,"onUpdate:modelValue":t[12]||(t[12]=a=>i.editedPatient.comorbidities=a),label:"Comorbidities"},null,8,["modelValue"]),l(s,{modelValue:i.editedPatient.preOpHb,"onUpdate:modelValue":t[13]||(t[13]=a=>i.editedPatient.preOpHb=a),label:"Pre-op HB",type:"number"},null,8,["modelValue"]),l(s,{modelValue:i.editedPatient.postOpHb,"onUpdate:modelValue":t[14]||(t[14]=a=>i.editedPatient.postOpHb=a),label:"Post-op HB",type:"number"},null,8,["modelValue"]),l(s,{modelValue:i.editedPatient.surgeryTime,"onUpdate:modelValue":t[15]||(t[15]=a=>i.editedPatient.surgeryTime=a),label:"Surgery Time",type:"time"},null,8,["modelValue"]),l(s,{modelValue:i.editedPatient.complications,"onUpdate:modelValue":t[16]||(t[16]=a=>i.editedPatient.complications=a),label:"Post-op Complications"},null,8,["modelValue"]),l(s,{modelValue:i.editedPatient.specialNotes,"onUpdate:modelValue":t[17]||(t[17]=a=>i.editedPatient.specialNotes=a),label:"Special Notes"},null,8,["modelValue"]),l(N,{modelValue:i.editedPatient.readmission,"onUpdate:modelValue":t[18]||(t[18]=a=>i.editedPatient.readmission=a),label:"Readmission Required"},null,8,["modelValue"]),l(s,{modelValue:i.editedPatient.otherMatters,"onUpdate:modelValue":t[19]||(t[19]=a=>i.editedPatient.otherMatters=a),label:"Other Matters"},null,8,["modelValue"])]),_:1}),l(z,{align:"right"},{default:d(()=>[q(l(g,{flat:"",label:"Cancel"},null,512),[[Y]]),l(g,{flat:"",label:"Save",color:"primary",onClick:r.saveEdit},null,8,["onClick"])]),_:1})]),_:1})]),_:1},8,["modelValue"])])}const te=Q(j,[["render",W]]);export{te as default};
