import{u as $,a as ee,b as te,c as le,d as ie,e as se,f as ae,Q as oe,g as W,h as ne,i as d,j as re}from"./QTable-ComeHYaz.js";import{Q as ue}from"./QToggle-C9hb0KIY.js";import{Q as de,d as L}from"./QBtn-CGi78GET.js";import{r as R,c,g as K,C as me,G,x as fe,h as F,k as pe,W as ce,B as ge,L as he,S as be,f as n,N as Y,X as y}from"./index-B--a_9vc.js";import{q as ye,_ as xe}from"./_plugin-vue_export-helper-GbxhcRUu.js";import{Q as ve}from"./QForm-dJvTWnY3.js";import{g as Ve,a as Fe,b as we,c as X,u as Se,d as De,e as Ie}from"./index.esm-DCn6hZRc.js";function S(e,t,g,x){const l=[];return e.forEach(m=>{x(m)===!0?l.push(m):t.push({failedPropValidation:g,file:m})}),l}function A(e){e&&e.dataTransfer&&(e.dataTransfer.dropEffect="copy"),G(e)}const Te={multiple:Boolean,accept:String,capture:String,maxFileSize:[Number,String],maxTotalSize:[Number,String],maxFiles:[Number,String],filter:Function},Ne=["rejected"];function Oe({editable:e,dnd:t,getFileInput:g,addFilesToQueue:x}){const{props:l,emit:m,proxy:i}=K(),w=R(null),T=c(()=>l.accept!==void 0?l.accept.split(",").map(s=>(s=s.trim(),s==="*"?"*/":(s.endsWith("/*")&&(s=s.slice(0,s.length-1)),s.toUpperCase()))):null),N=c(()=>parseInt(l.maxFiles,10)),O=c(()=>parseInt(l.maxTotalSize,10));function C(s){if(e.value)if(s!==Object(s)&&(s={target:null}),s.target!==null&&s.target.matches('input[type="file"]')===!0)s.clientX===0&&s.clientY===0&&me(s);else{const b=g();b&&b!==s.target&&b.click(s)}}function P(s){e.value&&s&&x(null,s)}function q(s,b,D,I){let o=Array.from(b||s.target.files);const h=[],V=()=>{h.length!==0&&m("rejected",h)};if(l.accept!==void 0&&T.value.indexOf("*/")===-1&&(o=S(o,h,"accept",r=>T.value.some(f=>r.type.toUpperCase().startsWith(f)||r.name.toUpperCase().endsWith(f))),o.length===0))return V();if(l.maxFileSize!==void 0){const r=parseInt(l.maxFileSize,10);if(o=S(o,h,"max-file-size",f=>f.size<=r),o.length===0)return V()}if(l.multiple!==!0&&o.length!==0&&(o=[o[0]]),o.forEach(r=>{r.__key=r.webkitRelativePath+r.lastModified+r.name+r.size}),I===!0){const r=D.map(f=>f.__key);o=S(o,h,"duplicate",f=>r.includes(f.__key)===!1)}if(o.length===0)return V();if(l.maxTotalSize!==void 0){let r=I===!0?D.reduce((f,j)=>f+j.size,0):0;if(o=S(o,h,"max-total-size",f=>(r+=f.size,r<=O.value)),o.length===0)return V()}if(typeof l.filter=="function"){const r=l.filter(o);o=S(o,h,"filter",f=>r.includes(f))}if(l.maxFiles!==void 0){let r=I===!0?D.length:0;if(o=S(o,h,"max-files",()=>(r++,r<=N.value)),o.length===0)return V()}if(V(),o.length!==0)return o}function z(s){A(s),t.value!==!0&&(t.value=!0)}function u(s){G(s),(s.relatedTarget!==null||fe.is.safari!==!0?s.relatedTarget!==w.value:document.elementsFromPoint(s.clientX,s.clientY).includes(w.value)===!1)===!0&&(t.value=!1)}function H(s){A(s);const b=s.dataTransfer.files;b.length!==0&&x(null,b),t.value=!1}function M(s){if(t.value===!0)return F("div",{ref:w,class:`q-${s}__dnd absolute-full`,onDragenter:A,onDragover:A,onDragleave:u,onDrop:H})}return Object.assign(i,{pickFiles:C,addFiles:P}),{pickFiles:C,addFiles:P,onDragover:z,onDragleave:u,processFiles:q,getDndNode:M,maxFilesNumber:N,maxTotalSizeNumber:O}}const Ce=pe({name:"QFile",inheritAttrs:!1,props:{...$,...ee,...Te,modelValue:[File,FileList,Array],append:Boolean,useChips:Boolean,displayValue:[String,Number],tabindex:{type:[String,Number],default:0},counterLabel:Function,inputClass:[Array,String,Object],inputStyle:[Array,String,Object]},emits:[...te,...Ne],setup(e,{slots:t,emit:g,attrs:x}){const{proxy:l}=K(),m=le(),i=R(null),w=R(!1),T=ie(e),{pickFiles:N,onDragover:O,onDragleave:C,processFiles:P,getDndNode:q}=Oe({editable:m.editable,dnd:w,getFileInput:Q,addFilesToQueue:E}),z=se(e),u=c(()=>Object(e.modelValue)===e.modelValue?"length"in e.modelValue?Array.from(e.modelValue):[e.modelValue]:[]),H=c(()=>W(u.value)),M=c(()=>u.value.map(a=>a.name).join(", ")),s=c(()=>ye(u.value.reduce((a,p)=>a+p.size,0))),b=c(()=>({totalSize:s.value,filesNumber:u.value.length,maxFiles:e.maxFiles})),D=c(()=>({tabindex:-1,type:"file",title:"",accept:e.accept,capture:e.capture,name:T.value,...x,id:m.targetUid.value,disabled:m.editable.value!==!0})),I=c(()=>"q-file q-field--auto-height"+(w.value===!0?" q-file--dnd":"")),o=c(()=>e.multiple===!0&&e.append===!0);function h(a){const p=u.value.slice();p.splice(a,1),r(p)}function V(a){const p=u.value.indexOf(a);p!==-1&&h(p)}function r(a){g("update:modelValue",e.multiple===!0?a:a[0])}function f(a){a.keyCode===13&&ge(a)}function j(a){(a.keyCode===13||a.keyCode===32)&&N(a)}function Q(){return i.value}function E(a,p){const v=P(a,p,u.value,o.value),k=Q();k!=null&&(k.value=""),v!==void 0&&((e.multiple===!0?e.modelValue&&v.every(_=>u.value.includes(_)):e.modelValue===v[0])||r(o.value===!0?u.value.concat(v):v))}function U(){return[F("input",{class:[e.inputClass,"q-file__filler"],style:e.inputStyle})]}function J(){if(t.file!==void 0)return u.value.length===0?U():u.value.map((p,v)=>t.file({index:v,file:p,ref:this}));if(t.selected!==void 0)return u.value.length===0?U():t.selected({files:u.value,ref:this});if(e.useChips===!0)return u.value.length===0?U():u.value.map((p,v)=>F(oe,{key:"file-"+v,removable:m.editable.value,dense:!0,textColor:e.color,tabindex:e.tabindex,onRemove:()=>{h(v)}},()=>F("span",{class:"ellipsis",textContent:p.name})));const a=e.displayValue!==void 0?e.displayValue:M.value;return a.length!==0?[F("div",{class:e.inputClass,style:e.inputStyle,textContent:a})]:U()}function Z(){const a={ref:i,...D.value,...z.value,class:"q-field__input fit absolute-full cursor-pointer",onChange:E};return e.multiple===!0&&(a.multiple=!0),F("input",a)}return Object.assign(m,{fieldClass:I,emitValue:r,hasValue:H,inputRef:i,innerValue:u,floatingLabel:c(()=>H.value===!0||W(e.displayValue)),computedCounter:c(()=>{if(e.counterLabel!==void 0)return e.counterLabel(b.value);const a=e.maxFiles;return`${u.value.length}${a!==void 0?" / "+a:""} (${s.value})`}),getControlChild:()=>q("file"),getControl:()=>{const a={ref:m.targetRef,class:"q-field__native row items-center cursor-pointer",tabindex:e.tabindex};return m.editable.value===!0&&Object.assign(a,{onDragover:O,onDragleave:C,onKeydown:f,onKeyup:j}),F("div",a,[Z()].concat(J()))}}),Object.assign(l,{removeAtIndex:h,removeFile:V,getNativeElement:()=>i.value}),ce(l,"nativeEl",()=>i.value),ae(m)}}),B=Ve(Fe()),Pe={data(){return{name:"",dob:"",age:"",maritalStatus:null,children:0,doa:"",dod:"",hospital:"",surgery:"",preDiagnosis:"",postDiagnosis:"",histology:"",comorbidities:"",preOpHb:null,postOpHb:null,surgeryTime:"",complications:"",specialNotes:"",readmission:!1,photo:null,otherMatters:"",formId:null,patients:[],columns:[{name:"name",label:"Name",field:"name",style:"max-width: 150px; height: auto; white-space: normal; text-align: left;"},{name:"dob",label:"Date of Birth",field:"dob",style:"max-width: 150px; white-space: normal; text-align: left;"},{name:"age",label:"Age",field:"age",style:"max-width: 100px; white-space: normal; text-align: left;"},{name:"maritalStatus",label:"Marital Status",field:"maritalStatus",style:"max-width: 150px; white-space: normal; text-align: left;"},{name:"children",label:"Children",field:"children",style:"max-width: 100px; white-space: normal; text-align: left;"},{name:"doa",label:"Date of Admission",field:"doa",style:"max-width: 150px; white-space: normal; text-align: left;"},{name:"dod",label:"Date of Discharge",field:"dod",style:"max-width: 150px; white-space: normal; text-align: left;"},{name:"hospital",label:"Hospital",field:"hospital",style:"max-width: 150px; white-space: normal; text-align: left;"},{name:"surgery",label:"Surgery",field:"surgery",style:"max-width: 150px; white-space: normal; text-align: left;"},{name:"preDiagnosis",label:"Pre-Surgery Diagnosis",field:"preDiagnosis",style:"max-width: 200px; height: auto; white-space: normal; text-align: left;"},{name:"postDiagnosis",label:"Post-Surgery Diagnosis",field:"postDiagnosis",style:"max-width: 200px; white-space: normal; text-align: left;"},{name:"histology",label:"Histology",field:"histology",style:"max-width: 150px; height: auto; white-space: normal; text-align: left;"},{name:"comorbidities",label:"Comorbidities",field:"comorbidities",style:"max-width: 200px; white-space: normal; text-align: left;"},{name:"preOpHb",label:"Pre-op HB",field:"preOpHb",style:"max-width: 100px; white-space: normal; text-align: left;"},{name:"postOpHb",label:"Post-op HB",field:"postOpHb",style:"max-width: 100px; white-space: normal; text-align: left;"},{name:"surgeryTime",label:"Surgery Time",field:"surgeryTime",style:"max-width: 150px; white-space: normal; text-align: left;"},{name:"complications",label:"Post-op Complications",field:"complications",style:"max-width: 200px; white-space: normal; text-align: left;"},{name:"specialNotes",label:"Special Notes",field:"specialNotes",style:"max-width: 200px; white-space: normal; text-align: left;"},{name:"readmission",label:"Readmission Required",field:"readmission",style:"max-width: 150px; white-space: normal; text-align: left;"},{name:"otherMatters",label:"Other Matters",field:"otherMatters",style:"max-width: 200px; white-space: normal; text-align: left;"},{name:"actions",label:"Actions",field:"actions",style:"text-align: left;"}]}},methods:{onReset(){Object.keys(this.$data).forEach(e=>{this[e]=this.$options.data()[e]})},async saveToFirebase(e){try{const t=e.name.split(" ");if(e.nameParts=t,this.formId)await Se(De(B,"patients",this.formId),e),console.log("Document updated:",this.formId,e);else{const g=await we(X(B,"patients"),e);this.formId=g.id,console.log("New document created with ID:",this.formId)}}catch(t){console.error("Error saving to Firebase:",t)}},async onSubmit(){const e={name:this.name,dob:this.dob,age:this.age,maritalStatus:this.maritalStatus,children:this.children,doa:this.doa,dod:this.dod,hospital:this.hospital,surgery:this.surgery,preDiagnosis:this.preDiagnosis,postDiagnosis:this.postDiagnosis,histology:this.histology,comorbidities:this.comorbidities,preOpHb:this.preOpHb,postOpHb:this.postOpHb,surgeryTime:this.surgeryTime,complications:this.complications,specialNotes:this.specialNotes,readmission:this.readmission,otherMatters:this.otherMatters,updatedAt:new Date().toISOString()};await this.saveToFirebase(e)}},watch:{dob(e){if(e){const t=new Date(e),g=new Date;let x=g.getFullYear()-t.getFullYear();const l=g.getMonth()-t.getMonth();(l<0||l===0&&g.getDate()<t.getDate())&&x--,this.age=x}this.formId&&this.saveToFirebase({dob:e,age:this.age})},name(e){this.formId&&this.saveToFirebase({name:e})},maritalStatus(e){this.formId&&this.saveToFirebase({maritalStatus:e})},children(e){this.formId&&this.saveToFirebase({children:e})},doa(e){this.formId&&this.saveToFirebase({doa:e})},dod(e){this.formId&&this.saveToFirebase({dod:e})},hospital(e){this.formId&&this.saveToFirebase({hospital:e})},surgery(e){this.formId&&this.saveToFirebase({surgery:e})},preDiagnosis(e){this.formId&&this.saveToFirebase({preDiagnosis:e})},postDiagnosis(e){this.formId&&this.saveToFirebase({postDiagnosis:e})},histology(e){this.formId&&this.saveToFirebase({histology:e})},comorbidities(e){this.formId&&this.saveToFirebase({comorbidities:e})},preOpHb(e){this.formId&&this.saveToFirebase({preOpHb:e})},postOpHb(e){this.formId&&this.saveToFirebase({postOpHb:e})},surgeryTime(e){this.formId&&this.saveToFirebase({surgeryTime:e})},complications(e){this.formId&&this.saveToFirebase({complications:e})},specialNotes(e){this.formId&&this.saveToFirebase({specialNotes:e})},readmission(e){this.formId&&this.saveToFirebase({readmission:e})},otherMatters(e){this.formId&&this.saveToFirebase({otherMatters:e})}},async mounted(){(await Ie(X(B,"patients"))).forEach(t=>{this.patients.push({id:t.id,...t.data()})})}},He={class:"q-pa-md",style:{width:"100vw",display:"flex","justify-content":"space-between"}},Ue={class:"row q-col-gutter-sm"},Ae={class:"col-6"},qe={class:"col-6"},ze={class:"row q-col-gutter-sm"},Me={class:"col-6"},je={class:"col-6"};function ke(e,t,g,x,l,m){return he(),be("div",He,[n(ve,{onSubmit:m.onSubmit,onReset:m.onReset,class:"q-gutter-md",style:{width:"50%","max-width":"600px"}},{default:Y(()=>[t[21]||(t[21]=y("div",{class:"text-h6"},"Personal Information",-1)),n(d,{filled:"",modelValue:l.name,"onUpdate:modelValue":t[0]||(t[0]=i=>l.name=i),label:"Patient Name *",rules:[i=>i&&i.length>0||"Name is required"]},null,8,["modelValue","rules"]),y("div",Ue,[y("div",Ae,[n(d,{filled:"",type:"date",modelValue:l.dob,"onUpdate:modelValue":t[1]||(t[1]=i=>l.dob=i),label:"Date of Birth *",rules:[i=>i&&i.length>0||"DOB is required"]},null,8,["modelValue","rules"])]),y("div",qe,[n(d,{filled:"",type:"number",modelValue:l.age,"onUpdate:modelValue":t[2]||(t[2]=i=>l.age=i),label:"Age",readonly:""},null,8,["modelValue"])])]),n(re,{filled:"",modelValue:l.maritalStatus,"onUpdate:modelValue":t[3]||(t[3]=i=>l.maritalStatus=i),options:["Single","Married","Divorced","Widowed"],label:"Marital Status"},null,8,["modelValue"]),n(d,{filled:"",type:"number",modelValue:l.children,"onUpdate:modelValue":t[4]||(t[4]=i=>l.children=i),label:"Number of Children"},null,8,["modelValue"]),t[22]||(t[22]=y("div",{class:"text-h6"},"Hospital Details",-1)),n(d,{filled:"",type:"date",modelValue:l.doa,"onUpdate:modelValue":t[5]||(t[5]=i=>l.doa=i),label:"Date of Admission *"},null,8,["modelValue"]),n(d,{filled:"",type:"date",modelValue:l.dod,"onUpdate:modelValue":t[6]||(t[6]=i=>l.dod=i),label:"Date of Discharge"},null,8,["modelValue"]),n(d,{filled:"",modelValue:l.hospital,"onUpdate:modelValue":t[7]||(t[7]=i=>l.hospital=i),label:"Hospital *"},null,8,["modelValue"]),t[23]||(t[23]=y("div",{class:"text-h6"},"Surgery Information",-1)),n(d,{filled:"",modelValue:l.surgery,"onUpdate:modelValue":t[8]||(t[8]=i=>l.surgery=i),label:"Surgery *"},null,8,["modelValue"]),n(d,{filled:"",type:"textarea",modelValue:l.preDiagnosis,"onUpdate:modelValue":t[9]||(t[9]=i=>l.preDiagnosis=i),label:"Pre-Surgery Diagnosis"},null,8,["modelValue"]),n(d,{filled:"",type:"textarea",modelValue:l.postDiagnosis,"onUpdate:modelValue":t[10]||(t[10]=i=>l.postDiagnosis=i),label:"Post-Surgery Diagnosis"},null,8,["modelValue"]),n(d,{filled:"",type:"textarea",modelValue:l.histology,"onUpdate:modelValue":t[11]||(t[11]=i=>l.histology=i),label:"Histology"},null,8,["modelValue"]),t[24]||(t[24]=y("div",{class:"text-h6"},"Medical Details",-1)),n(d,{filled:"",type:"textarea",modelValue:l.comorbidities,"onUpdate:modelValue":t[12]||(t[12]=i=>l.comorbidities=i),label:"Comorbidities"},null,8,["modelValue"]),y("div",ze,[y("div",Me,[n(d,{filled:"",type:"number",step:"0.1",modelValue:l.preOpHb,"onUpdate:modelValue":t[13]||(t[13]=i=>l.preOpHb=i),label:"Pre-op HB"},null,8,["modelValue"])]),y("div",je,[n(d,{filled:"",type:"number",step:"0.1",modelValue:l.postOpHb,"onUpdate:modelValue":t[14]||(t[14]=i=>l.postOpHb=i),label:"Post-op HB"},null,8,["modelValue"])])]),n(d,{filled:"",type:"time",modelValue:l.surgeryTime,"onUpdate:modelValue":t[15]||(t[15]=i=>l.surgeryTime=i),label:"Surgery Time"},null,8,["modelValue"]),n(d,{filled:"",type:"textarea",modelValue:l.complications,"onUpdate:modelValue":t[16]||(t[16]=i=>l.complications=i),label:"Post-op Complications"},null,8,["modelValue"]),n(d,{filled:"",type:"textarea",modelValue:l.specialNotes,"onUpdate:modelValue":t[17]||(t[17]=i=>l.specialNotes=i),label:"Special Notes"},null,8,["modelValue"]),n(ue,{modelValue:l.readmission,"onUpdate:modelValue":t[18]||(t[18]=i=>l.readmission=i),label:"Readmission Required"},null,8,["modelValue"]),n(Ce,{filled:"",modelValue:l.photo,"onUpdate:modelValue":t[19]||(t[19]=i=>l.photo=i),label:"Upload Photo",accept:"image/*"},{append:Y(()=>[n(de,{name:"attach_file"})]),_:1},8,["modelValue"]),n(d,{filled:"",type:"textarea",modelValue:l.otherMatters,"onUpdate:modelValue":t[20]||(t[20]=i=>l.otherMatters=i),label:"Any Other Matters"},null,8,["modelValue"]),y("div",null,[n(L,{label:"Submit",type:"submit",color:"primary"}),n(L,{label:"Reset",type:"reset",color:"primary",flat:"",class:"q-ml-sm"})])]),_:1},8,["onSubmit","onReset"]),n(ne,{style:{width:"60%","max-width":"1500px"},rows:l.patients,columns:l.columns,"row-key":"id"},null,8,["rows","columns"])])}const Xe=xe(Pe,[["render",ke]]);export{Xe as default};
